name: CI-SDE

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches: main
  schedule:
    - cron:  '0 3 * * 2-6'

jobs:
  clone:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2
        
    - uses: actions/checkout@v2
      with:
        repository: NetworkGradeLinux/mion
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: dunfell
        fetch-depth: 0
        submodules: true
        path: mion
      
    - uses: actions/checkout@v2
      with:
        repository: NetworkGradeLinux/meta-mion
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: dunfell
        path: mion/meta-mion
        
    - uses: actions/checkout@v2
      with:
        repository: NetworkGradeLinux/meta-mion-bsp
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: dunfell
        path: mion/meta-mion-bsp
        
    - uses: actions/checkout@v2
      with:
        repository: NetworkGradeLinux/meta-mion-backports
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: dunfell
        path: mion/meta-mion-backports
        
    - uses: actions/checkout@v2
      with:
        repository: NetworkGradeLinux/meta-mion-sde
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: dunfell
        path: mion/meta-mion-sde 
        
    - uses: actions/checkout@v2
      with:
        repository: NetworkGradeLinux/meta-mion-stratum
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: dunfell
        path: mion/meta-mion-stratum 

  build:
    runs-on: self-hosted
    needs: [clone]

    steps:
    - name: Pre-build steps
      shell: sh
      working-directory: mion/build/conf
      run: |
        echo "Event name: ${GITHUB_EVENT_NAME}"
        [ "${GITHUB_EVENT_NAME}" = "schedule" ] && rm -rf /home/gh-runner/sstate-cache/
        echo "DL_DIR ?= \"/srv/downloads/\"" >> local.conf
        echo "SSTATE_DIR ?= \"/home/gh-runner/sstate-cache/\"" >> local.conf
        mkdir /srv/DEPLOY_SDE/${GITHUB_RUN_NUMBER}_failed

    - name: Add Barefoot SDE to local.conf
      if: ${{ success() }}
      shell: sh
      working-directory: mion/build/conf
      run: |
        sed -i "s#^\"#  \${MIONBASE}/meta-mion-sde/meta-mion-barefoot \\\\\n\"#" bblayers.conf
        sed -i "s#^\"#  \${MIONBASE}/meta-mion-stratum \\\\\n\"#" bblayers.conf
        echo "IMAGE_INSTALL += \"stratum\"" >> local.conf
        cp -r ~/bf-sde ../../
        
    - name: Build stordis-bf2556x-1t (SDE+Stratum)
      if: ${{ success() || failure() }}
      shell: bash
      working-directory: mion
      run: |
        source openembedded-core/oe-init-build-env
        ../cronie.sh -m stordis-bf2556x-1t mion-onie-image-onlpv1
        rsync -av tmp-glibc/deploy/images/stordis-bf2556x-1t/ /srv/DEPLOY_SDE/${GITHUB_RUN_NUMBER}_failed/stordis-bf2556x-1t_onie-onlpv1
        
    - name: Build accton-wedge100bf-32x (SDE+Stratum)
      if: ${{ success() || failure() }}
      shell: bash
      working-directory: mion
      run: |
        source openembedded-core/oe-init-build-env
        ../cronie.sh -m accton-wedge100bf-32x mion-onie-image-onlpv1
        rsync -av tmp-glibc/deploy/images/accton-wedge100bf-32x/ /srv/DEPLOY_SDE/${GITHUB_RUN_NUMBER}_failed/accton-wedge100bf-32x_onie-onlpv1   
    
    - name: Post-build steps
      if: ${{ success() }}
      shell: sh
      run: |
        cd /srv/DEPLOY_SDE/
        mv ${GITHUB_RUN_NUMBER}_failed ${GITHUB_RUN_NUMBER}
        find ${GITHUB_RUN_NUMBER} -type f -size +4G -delete
        rm -rf $(ls -1t | tail -n +32)
        
    - name: Slack Notification on Fail
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: gh-notify
        SLACK_COLOR: danger
        SLACK_ICON: https://raw.githubusercontent.com/phil-r/slack-emoji/master/emojis/Memes/thisisfine.png
        SLACK_TITLE: Build Failure
        SLACK_MESSAGE: "Workflow: ${{ github.workflow }}  RunID: ${{ github.run_id }}"
        SLACK_USERNAME: Mion CI
        SLACK_MSG_AUTHOR: GitHub
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_FOOTER: ""
        MSG_MINIMAL: actions url
      
    - name: Slack Notification on Success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: gh-notify
        SLACK_COLOR: good
        SLACK_ICON: https://raw.githubusercontent.com/phil-r/slack-emoji/master/emojis/Memes/allthe.png
        SLACK_MESSAGE: "Workflow: ${{ github.workflow }}  RunID: ${{ github.run_id }}"
        SLACK_TITLE: Build Success
        SLACK_USERNAME: Mion CI
        SLACK_MSG_AUTHOR: GitHub
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_FOOTER: ""
        MSG_MINIMAL: actions url
